on:
  workflow_call:
    inputs:
      channel:
        required: false
        type: string
        default: 'stable'
      run_ios:
        required: false
        type: boolean
        default: false
      run_android_build:
        required: false
        type: boolean
        default: false
      upload_apk:
        required: false
        type: boolean
        default: false

jobs:
  analyze-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Pub packages
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ inputs.channel }}

      - name: Flutter --version
        run: flutter --version

      - name: Get dependencies
        run: flutter pub get

      - name: Format check (tries flutter format, then dart format)
        run: |
          set -euo pipefail
          if command -v flutter >/dev/null 2>&1; then
            if flutter help format >/dev/null 2>&1 || flutter format --help >/dev/null 2>&1; then
              echo "Using 'flutter format'..."
              if flutter format --set-exit-if-changed . >/dev/null 2>&1; then
                echo "No formatting changes required (flutter format)."
              else
                # Si flutter format retornó código distinto, reejecutamos sin redirigir salida para que se vea el diff
                flutter format --set-exit-if-changed .
              fi
            else
              echo "'flutter format' no disponible, intentando 'dart format'..."
              if command -v dart >/dev/null 2>&1; then
                dart format --set-exit-if-changed .
              else
                echo "Ni 'flutter format' ni 'dart format' están disponibles." >&2
                exit 1
              fi
            fi
          elif command -v dart >/dev/null 2>&1; then
            echo "Usando 'dart format' porque 'flutter' no está en PATH..."
            dart format --set-exit-if-changed .
          else
            echo "Ni 'flutter' ni 'dart' están disponibles en el runner." >&2
            exit 1
          fi

      - name: Static analysis
        run: flutter analyze

      - name: Run unit tests (with coverage)
        run: flutter test --coverage

  android-build:
    if: ${{ inputs.run_android_build }}
    runs-on: ubuntu-latest
    needs: analyze-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ inputs.channel }}

      - name: Get dependencies
        run: flutter pub get

      - name: Build Android release APK
        run: flutter build apk --release

      - name: Upload APK artifact
        if: ${{ inputs.upload_apk }}
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/*.apk

  ios-build:
    if: ${{ inputs.run_ios }}
    runs-on: macos-latest
    needs: analyze-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ inputs.channel }}

      - name: Get dependencies
        run: flutter pub get

      - name: Attempt iOS build (no codesign)
        run: |
          flutter build ios --no-codesign || true

      - name: Upload iOS build logs
        uses: actions/upload-artifact@v4
        with:
          name: ios-build-logs
          path: build/** || .